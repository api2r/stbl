[{"path":[]},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to ykwim","title":"Contributing to ykwim","text":"outlines propose change ykwim.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to ykwim","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to ykwim","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jonthegeek.github.io/ykwim/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to ykwim","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jonthegeek/ykwim\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to ykwim","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jonthegeek.github.io/ykwim/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to ykwim","text":"Please note ykwim project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/ykwim/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ykwim authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonthegeek.github.io/ykwim/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with ykwim","title":"Getting help with ykwim","text":"Thanks using ykwim! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jonthegeek.github.io/ykwim/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with ykwim","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jonthegeek.github.io/ykwim/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with ykwim","text":"Armed reprex, next step figure ask. ’s question: ’s best ask R4DS Online Learning Community Slack. options include Posit Community, StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jonthegeek.github.io/ykwim/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with ykwim","text":"’ll try look issue soon can, packages maintained volunteers. good reprex particularly important might weeks months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jonthegeek.github.io/ykwim/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://jonthegeek.github.io/ykwim/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). ykwim: Know Mean. https://github.com/jonthegeek/ykwim, https://jonthegeek.github.io/ykwim/.","code":"@Manual{,   title = {ykwim: You Know What I Mean},   author = {Jon Harmon},   year = {2023},   note = {https://github.com/jonthegeek/ykwim, https://jonthegeek.github.io/ykwim/}, }"},{"path":"https://jonthegeek.github.io/ykwim/index.html","id":"ykwim","dir":"","previous_headings":"","what":"You Know What I Mean","title":"You Know What I Mean","text":"R flexible classes. Variables declared explicit classes, arguments “wrong” class don’t cause errors explicitly fail point call stack. helpful keep flexibility user standpoint, error informatively quickly inputs work computation. purpose ykwim allow programmers specify want, see user supplied can work purpose.","code":""},{"path":"https://jonthegeek.github.io/ykwim/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"You Know What I Mean","text":"can install development version ykwim GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jonthegeek/ykwim\")"},{"path":"https://jonthegeek.github.io/ykwim/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"You Know What I Mean","text":"Use within functions give meaningful error messages bad argument classes. example, perhaps like protect case data properly translated character load.","code":""},{"path":"https://jonthegeek.github.io/ykwim/index.html","id":"without-ykwim","dir":"","previous_headings":"Usage","what":"Without ykwim:","title":"You Know What I Mean","text":"Without argument-stabilizers provided ykwim, error messages can cryptic, errors trigger might want .","code":"# Without ykwim. my_old_fun <- function(my_arg_name) {   my_arg_name + 1 } my_old_fun(\"1\") #> Error in my_arg_name + 1: non-numeric argument to binary operator"},{"path":"https://jonthegeek.github.io/ykwim/index.html","id":"with-ykwim","dir":"","previous_headings":"Usage","what":"With ykwim:","title":"You Know What I Mean","text":"ykwim helps ensure arguments expect . Failures reported helpful messages. errors help locate issues within vectors.","code":"my_fun <- function(my_arg_name) {   my_arg_name <- ykwim::to_int(my_arg_name)   my_arg_name + 1 } my_fun(\"1\") #> [1] 2 my_fun(\"1.1\") #> Error in `my_fun()`: #> ! `my_arg_name` <character> must be coercible to <integer> #> ✖ Can't convert some values due to loss of precision. #> • Locations: 1 my_fun(c(\"1\", \"2\", \"3.1\", \"4\", \"5.2\")) #> Error in `my_fun()`: #> ! `my_arg_name` <character> must be coercible to <integer> #> ✖ Can't convert some values due to loss of precision. #> • Locations: 3 and 5"},{"path":"https://jonthegeek.github.io/ykwim/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"You Know What I Mean","text":"Please note ykwim project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/dot-coerce-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared parameters — .coerce-params","title":"Shared parameters — .coerce-params","text":"parameters used multiple coercion functions. defined make easier import find.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/dot-coerce-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared parameters — .coerce-params","text":"... dots future extensions empty. allow_na Logical. NA values ok? allow_null Logical. NULL acceptable value? min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). x argument stabilize. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/object_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the class, type, etc of an object — object_type","title":"Identify the class, type, etc of an object — object_type","text":"Extract class (type) object use error messages.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/object_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the class, type, etc of an object — object_type","text":"","code":"object_type(x)"},{"path":"https://jonthegeek.github.io/ykwim/reference/object_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the class, type, etc of an object — object_type","text":"x object test.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/object_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the class, type, etc of an object — object_type","text":"length-1 character vector describing class object.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/object_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the class, type, etc of an object — object_type","text":"","code":"object_type(\"a\") #> [1] \"character\" object_type(1L) #> [1] \"integer\" object_type(1.1) #> [1] \"double\" object_type(mtcars) #> [1] \"data.frame\" object_type(rlang::quo(something)) #> [1] \"quosure\""},{"path":"https://jonthegeek.github.io/ykwim/reference/stabilize_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an integer argument meets expectations — stabilize_int","title":"Ensure an integer argument meets expectations — stabilize_int","text":"details soon.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/stabilize_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an integer argument meets expectations — stabilize_int","text":"","code":"stabilize_int(   x,   ...,   allow_null = TRUE,   allow_na = TRUE,   min_size = NULL,   max_size = NULL,   min_value = NULL,   max_value = NULL,   x_arg = rlang::caller_arg(x),   call = rlang::caller_env() )"},{"path":"https://jonthegeek.github.io/ykwim/reference/stabilize_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an integer argument meets expectations — stabilize_int","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_na Logical. NA values ok? min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). min_value Integer scalar. lowest allowed value x. NULL (default) values checked. max_value Integer scalar. highest allowed value x. NULL (default) values checked. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/stabilize_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an integer argument meets expectations — stabilize_int","text":"argument integer.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/stabilize_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure an integer argument meets expectations — stabilize_int","text":"","code":"stabilize_int(1:10) #>  [1]  1  2  3  4  5  6  7  8  9 10 stabilize_int(\"1\") #> [1] 1 stabilize_int(1 + 0i) #> [1] 1"},{"path":"https://jonthegeek.github.io/ykwim/reference/to_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to integer — to_int","title":"Coerce an argument to integer — to_int","text":"value can coerced integer without losing information, silently. Otherwise throw informative error. function equivalent stabilize_int() additional arguments set default values, faster.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/to_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to integer — to_int","text":"","code":"to_int(   x,   allow_null = TRUE,   x_arg = rlang::caller_arg(x),   call = rlang::caller_env() )"},{"path":"https://jonthegeek.github.io/ykwim/reference/to_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to integer — to_int","text":"x argument stabilize. allow_null Logical. NULL acceptable value? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/to_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to integer — to_int","text":"integer equivalent x.","code":""},{"path":"https://jonthegeek.github.io/ykwim/reference/to_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to integer — to_int","text":"","code":"to_int(1:10) #>  [1]  1  2  3  4  5  6  7  8  9 10 to_int(\"1\") #> [1] 1 to_int(1 + 0i) #> [1] 1"},{"path":"https://jonthegeek.github.io/ykwim/reference/ykwim-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ykwim: You Know What I Mean — ykwim-package","title":"ykwim: You Know What I Mean — ykwim-package","text":"Coerce inputs desired class possible, throw informative error.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/ykwim/reference/ykwim-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ykwim: You Know What I Mean — ykwim-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""}]
