[{"path":[]},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement jonthegeek@gmail.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jonthegeek.github.io/stbl/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jonthegeek.github.io/stbl/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to stbl","title":"Contributing to stbl","text":"outlines propose change stbl.","code":""},{"path":"https://jonthegeek.github.io/stbl/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to stbl","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jonthegeek.github.io/stbl/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to stbl","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jonthegeek.github.io/stbl/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to stbl","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jonthegeek/stbl\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jonthegeek.github.io/stbl/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to stbl","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jonthegeek.github.io/stbl/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to stbl","text":"Please note stbl project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/stbl/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 stbl authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jonthegeek.github.io/stbl/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with stbl","title":"Getting help with stbl","text":"Thanks using stbl! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jonthegeek.github.io/stbl/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with stbl","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jonthegeek.github.io/stbl/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with stbl","text":"Armed reprex, next step figure ask. ’s question: ’s best ask R4DS Online Learning Community Slack. options include Posit Community, StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jonthegeek.github.io/stbl/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with stbl","text":"’ll try look issue soon can, packages maintained volunteers. good reprex particularly important might weeks months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jonthegeek.github.io/stbl/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jon Harmon. Author, maintainer.","code":""},{"path":"https://jonthegeek.github.io/stbl/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Harmon J (2023). stbl: Stabilize Function Arguments. https://github.com/jonthegeek/stbl, https://jonthegeek.github.io/stbl/.","code":"@Manual{,   title = {stbl: Stabilize Function Arguments},   author = {Jon Harmon},   year = {2023},   note = {https://github.com/jonthegeek/stbl, https://jonthegeek.github.io/stbl/}, }"},{"path":"https://jonthegeek.github.io/stbl/index.html","id":"stbl","dir":"","previous_headings":"","what":"Stabilize Function Arguments","title":"Stabilize Function Arguments","text":"R flexible classes. Variables declared explicit classes, arguments “wrong” class don’t cause errors explicitly fail point call stack. helpful keep flexibility user standpoint, error informatively quickly inputs work computation. purpose stbl allow programmers specify want, see user supplied can work purpose.","code":""},{"path":"https://jonthegeek.github.io/stbl/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stabilize Function Arguments","text":"can install development version stbl GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"jonthegeek/stbl\")"},{"path":"https://jonthegeek.github.io/stbl/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Stabilize Function Arguments","text":"Use within functions give meaningful error messages bad argument classes. example, perhaps like protect case data properly translated character load.","code":""},{"path":"https://jonthegeek.github.io/stbl/index.html","id":"without-stbl","dir":"","previous_headings":"Usage","what":"Without stbl:","title":"Stabilize Function Arguments","text":"Without argument-stabilizers provided stbl, error messages can cryptic, errors trigger might want .","code":"my_old_fun <- function(my_arg_name) {   my_arg_name + 1 } my_old_fun(\"1\") #> Error in my_arg_name + 1: non-numeric argument to binary operator"},{"path":"https://jonthegeek.github.io/stbl/index.html","id":"with-stbl","dir":"","previous_headings":"Usage","what":"With stbl:","title":"Stabilize Function Arguments","text":"stbl helps ensure arguments expect . Failures reported helpful messages. errors help locate issues within vectors.","code":"my_fun <- function(my_arg_name) {   my_arg_name <- stbl::to_int(my_arg_name)   my_arg_name + 1 } my_fun(\"1\") #> [1] 2 my_fun(\"1.1\") #> Error in `my_fun()`: #> ! `my_arg_name` <character> must be coercible to <integer> #> ✖ Can't convert some values due to loss of precision. #> • Locations: 1 my_fun(c(\"1\", \"2\", \"3.1\", \"4\", \"5.2\")) #> Error in `my_fun()`: #> ! `my_arg_name` <character> must be coercible to <integer> #> ✖ Can't convert some values due to loss of precision. #> • Locations: 3 and 5"},{"path":"https://jonthegeek.github.io/stbl/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Stabilize Function Arguments","text":"Please note stbl project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/dot-coerce-params.html","id":null,"dir":"Reference","previous_headings":"","what":"Shared parameters — .coerce-params","title":"Shared parameters — .coerce-params","text":"parameters used multiple coercion functions. defined make easier import find.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/dot-coerce-params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shared parameters — .coerce-params","text":"... dots future extensions empty. allow_na Logical. NA values ok? allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). x argument stabilize. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class. call execution environment call. See call argument rlang::abort() information.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/object_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the class, type, etc of an object — object_type","title":"Identify the class, type, etc of an object — object_type","text":"Extract class (type) object use error messages.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/object_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the class, type, etc of an object — object_type","text":"","code":"object_type(x)"},{"path":"https://jonthegeek.github.io/stbl/reference/object_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the class, type, etc of an object — object_type","text":"x object test.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/object_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the class, type, etc of an object — object_type","text":"length-1 character vector describing class object.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/object_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the class, type, etc of an object — object_type","text":"","code":"object_type(\"a\") #> [1] \"character\" object_type(1L) #> [1] \"integer\" object_type(1.1) #> [1] \"double\" object_type(mtcars) #> [1] \"data.frame\" object_type(rlang::quo(something)) #> [1] \"quosure\""},{"path":"https://jonthegeek.github.io/stbl/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. rlang caller_arg, caller_env","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an argument meets expectations — stabilize_arg","title":"Ensure an argument meets expectations — stabilize_arg","text":"function used functions stabilize_int(). Use stabilize_arg() type-specific functions work use case, still like check things like size whether argument NULL.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an argument meets expectations — stabilize_arg","text":"","code":"stabilize_arg(   x,   ...,   allow_null = TRUE,   allow_na = TRUE,   min_size = NULL,   max_size = NULL,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an argument meets expectations — stabilize_arg","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_na Logical. NA values ok? min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an argument meets expectations — stabilize_arg","text":"x, unless one checks fails.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure an argument meets expectations — stabilize_arg","text":"","code":"wrapper <- function(this_arg, ...) {   stabilize_arg(this_arg, ...) } wrapper(1) #> [1] 1 wrapper(NULL) #> NULL wrapper(NA) #> [1] NA try(wrapper(NULL, allow_null = FALSE)) #> Error in wrapper(NULL, allow_null = FALSE) :  #>   `this_arg` must not be <NULL>. try(wrapper(NA, allow_na = FALSE)) #> Error in wrapper(NA, allow_na = FALSE) :  #>   `this_arg` must not contain NA values. #> • NA locations: 1 try(wrapper(1, min_size = 2)) #> Error in wrapper(1, min_size = 2) :  #>   `this_arg` must have size >= 2. #> ✖ 1 is too small. try(wrapper(1:10, max_size = 5)) #> Error in wrapper(1:10, max_size = 5) :  #>   `this_arg` must have size <= 5. #> ✖ 10 is too big."},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an argument meets expectations and is length-1 — stabilize_arg_scalar","title":"Ensure an argument meets expectations and is length-1 — stabilize_arg_scalar","text":"function equivalent stabilize_arg(), optimized check length-1 vectors.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an argument meets expectations and is length-1 — stabilize_arg_scalar","text":"","code":"stabilize_arg_scalar(   x,   ...,   allow_null = TRUE,   allow_zero_length = TRUE,   allow_na = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an argument meets expectations and is length-1 — stabilize_arg_scalar","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? allow_na Logical. NA values ok? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an argument meets expectations and is length-1 — stabilize_arg_scalar","text":"x, unless one checks fails.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_arg_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure an argument meets expectations and is length-1 — stabilize_arg_scalar","text":"","code":"stabilize_arg_scalar(\"a\") #> [1] \"a\" stabilize_arg_scalar(1L) #> [1] 1 try(stabilize_arg_scalar(1:10)) #> Error in eval(expr, envir, enclos) :  #>   `1:10` must be a single <integer>. #> ✖ `1:10` has 10 values."},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure a character argument meets expectations — stabilize_chr","title":"Ensure a character argument meets expectations — stabilize_chr","text":"Check character argument ensure meets expectations, coercing character possible. argument meet requirements, user receive informative error message. Note to_chr() faster version function fewer options.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure a character argument meets expectations — stabilize_chr","text":"","code":"stabilize_chr(   x,   ...,   allow_null = TRUE,   allow_na = TRUE,   min_size = NULL,   max_size = NULL,   regex = NULL,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure a character argument meets expectations — stabilize_chr","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_na Logical. NA values ok? min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). regex Character scalar. optional regex pattern compare value(s) x . complex regex pattern throws error, try installing stringi package install.packages(\"stringi\"). x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure a character argument meets expectations — stabilize_chr","text":"argument character vector.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure a character argument meets expectations — stabilize_chr","text":"","code":"stabilize_chr(letters) #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" stabilize_chr(1:10) #>  [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" stabilize_chr(NULL) #> NULL try(stabilize_chr(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>. try(stabilize_chr(c(\"a\", NA), allow_na = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `c(\"a\", NA)` must not contain NA values. #> • NA locations: 2 try(stabilize_chr(letters, min_size = 50)) #> Error in eval(expr, envir, enclos) :  #>   `letters` must have size >= 50. #> ✖ 26 is too small. try(stabilize_chr(letters, max_size = 20)) #> Error in eval(expr, envir, enclos) :  #>   `letters` must have size <= 20. #> ✖ 26 is too big. try(stabilize_chr(c(\"hide\", \"find\", \"find\", \"hide\"), regex = \"hide\")) #> Error in eval(expr, envir, enclos) :  #>   `c(\"hide\", \"find\", \"find\", \"hide\")` must match the provided regex #> pattern. #> ✖ Some values do not match. #> • Locations: 2 and 3"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure a character argument meets expectations and is length-1 — stabilize_chr_scalar","title":"Ensure a character argument meets expectations and is length-1 — stabilize_chr_scalar","text":"function equivalent stabilize_chr(), optimized check length-1 character vectors.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure a character argument meets expectations and is length-1 — stabilize_chr_scalar","text":"","code":"stabilize_chr_scalar(   x,   ...,   allow_null = TRUE,   allow_zero_length = TRUE,   allow_na = TRUE,   regex = NULL,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure a character argument meets expectations and is length-1 — stabilize_chr_scalar","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? allow_na Logical. NA values ok? regex Character scalar. optional regex pattern compare value(s) x . complex regex pattern throws error, try installing stringi package install.packages(\"stringi\"). x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure a character argument meets expectations and is length-1 — stabilize_chr_scalar","text":"x, unless one checks fails.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_chr_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure a character argument meets expectations and is length-1 — stabilize_chr_scalar","text":"","code":"stabilize_chr_scalar(TRUE) #> [1] \"TRUE\" stabilize_chr_scalar(\"TRUE\") #> [1] \"TRUE\" try(stabilize_chr_scalar(c(TRUE, FALSE, TRUE))) #> Error in eval(expr, envir, enclos) :  #>   `c(TRUE, FALSE, TRUE)` must be a single <logical>. #> ✖ `c(TRUE, FALSE, TRUE)` has 3 values. stabilize_chr_scalar(NULL) #> NULL try(stabilize_chr_scalar(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>."},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an integer argument meets expectations — stabilize_int","title":"Ensure an integer argument meets expectations — stabilize_int","text":"Check integer argument ensure meets expectations, coercing integer possible. argument meet requirements, user receive informative error message. Note to_int() faster version function fewer options.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an integer argument meets expectations — stabilize_int","text":"","code":"stabilize_int(   x,   ...,   allow_null = TRUE,   allow_na = TRUE,   coerce_character = TRUE,   coerce_factor = TRUE,   min_size = NULL,   max_size = NULL,   min_value = NULL,   max_value = NULL,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an integer argument meets expectations — stabilize_int","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_na Logical. NA values ok? coerce_character Logical. character vectors \"1\" \"2.0\" coerced integer? coerce_factor Logical. factors values \"1\" \"2.0\" coerced integer? Note function uses character value factor, .integer() uses integer index factor. min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). min_value Integer scalar. lowest allowed value x. NULL (default) values checked. max_value Integer scalar. highest allowed value x. NULL (default) values checked. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an integer argument meets expectations — stabilize_int","text":"argument integer.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure an integer argument meets expectations — stabilize_int","text":"","code":"stabilize_int(1:10) #>  [1]  1  2  3  4  5  6  7  8  9 10 stabilize_int(\"1\") #> [1] 1 stabilize_int(1 + 0i) #> [1] 1 stabilize_int(NULL) #> NULL try(stabilize_int(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>. try(stabilize_int(c(1, NA), allow_na = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `c(1, NA)` must not contain NA values. #> • NA locations: 2 try(stabilize_int(letters)) #> Error in eval(expr, envir, enclos) :  #>   `letters` <character> must be coercible to <integer> #> ✖ Can't convert some values due to incompatible values. #> • Locations: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, …, #>   25, and 26 try(stabilize_int(\"1\", coerce_character = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   Can't coerce `\"1\"` <character> to <integer>. try(stabilize_int(factor(c(\"1\", \"a\")))) #> Error in eval(expr, envir, enclos) :  #>   `factor(c(\"1\", \"a\"))` <factor> must be coercible to <integer> #> ✖ Can't convert some values due to incompatible values. #> • Locations: 2 try(stabilize_int(factor(\"1\"), coerce_factor = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   Can't coerce `factor(\"1\")` <factor> to <integer>. try(stabilize_int(1:10, min_value = 3)) #> Error in eval(expr, envir, enclos) :  #>   ! Values of `1:10` must be >= 3. #> ✖ Values are too low at locations 1 and 2. try(stabilize_int(1:10, max_value = 7)) #> Error in eval(expr, envir, enclos) :  #>   ! Values of `1:10` must be <= 7. #> ✖ Values are too high at locations 8, 9, and 10."},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure an integer argument meets expectations and is length-1 — stabilize_int_scalar","title":"Ensure an integer argument meets expectations and is length-1 — stabilize_int_scalar","text":"function equivalent stabilize_int(), optimized check length-1 integers.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure an integer argument meets expectations and is length-1 — stabilize_int_scalar","text":"","code":"stabilize_int_scalar(   x,   ...,   allow_null = TRUE,   allow_zero_length = TRUE,   allow_na = TRUE,   coerce_character = TRUE,   coerce_factor = TRUE,   min_value = NULL,   max_value = NULL,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure an integer argument meets expectations and is length-1 — stabilize_int_scalar","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? allow_na Logical. NA values ok? coerce_character Logical. character vectors \"1\" \"2.0\" coerced integer? coerce_factor Logical. factors values \"1\" \"2.0\" coerced integer? Note function uses character value factor, .integer() uses integer index factor. min_value Integer scalar. lowest allowed value x. NULL (default) values checked. max_value Integer scalar. highest allowed value x. NULL (default) values checked. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure an integer argument meets expectations and is length-1 — stabilize_int_scalar","text":"x, unless one checks fails.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_int_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure an integer argument meets expectations and is length-1 — stabilize_int_scalar","text":"","code":"stabilize_int_scalar(1L) #> [1] 1 stabilize_int_scalar(\"1\") #> [1] 1 try(stabilize_int_scalar(1:10)) #> Error in eval(expr, envir, enclos) :  #>   `1:10` must be a single <integer>. #> ✖ `1:10` has 10 values. stabilize_int_scalar(NULL) #> NULL try(stabilize_int_scalar(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>."},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure a logical argument meets expectations — stabilize_lgl","title":"Ensure a logical argument meets expectations — stabilize_lgl","text":"Check logical argument ensure meets expectations, coercing logical possible. argument meet requirements, user receive informative error message. Note to_lgl() faster version function fewer options.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure a logical argument meets expectations — stabilize_lgl","text":"","code":"stabilize_lgl(   x,   ...,   allow_null = TRUE,   allow_na = TRUE,   min_size = NULL,   max_size = NULL,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure a logical argument meets expectations — stabilize_lgl","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_na Logical. NA values ok? min_size Integer. minimum size object. Object size tested using vctrs::vec_size(). max_size Integer. maximum size object. Object size tested using vctrs::vec_size(). x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure a logical argument meets expectations — stabilize_lgl","text":"argument logical vector.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure a logical argument meets expectations — stabilize_lgl","text":"","code":"stabilize_lgl(c(TRUE, FALSE, TRUE)) #> [1]  TRUE FALSE  TRUE stabilize_lgl(\"true\") #> [1] TRUE stabilize_lgl(NULL) #> NULL try(stabilize_lgl(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>. try(stabilize_lgl(c(TRUE, NA), allow_na = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `c(TRUE, NA)` must not contain NA values. #> • NA locations: 2 try(stabilize_lgl(letters)) #> Error in eval(expr, envir, enclos) :  #>   `letters` <character> must be coercible to <logical> #> ✖ Can't convert some values due to incompatible values. #> • Locations: 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, …, #>   25, and 26 try(stabilize_lgl(c(TRUE, FALSE, TRUE), min_size = 5)) #> Error in eval(expr, envir, enclos) :  #>   `c(TRUE, FALSE, TRUE)` must have size >= 5. #> ✖ 3 is too small. try(stabilize_lgl(c(TRUE, FALSE, TRUE), max_size = 2)) #> Error in eval(expr, envir, enclos) :  #>   `c(TRUE, FALSE, TRUE)` must have size <= 2. #> ✖ 3 is too big."},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure a logical argument meets expectations and is length-1 — stabilize_lgl_scalar","title":"Ensure a logical argument meets expectations and is length-1 — stabilize_lgl_scalar","text":"function equivalent stabilize_lgl(), optimized check length-1 logical vectors.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure a logical argument meets expectations and is length-1 — stabilize_lgl_scalar","text":"","code":"stabilize_lgl_scalar(   x,   ...,   allow_null = TRUE,   allow_zero_length = TRUE,   allow_na = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure a logical argument meets expectations and is length-1 — stabilize_lgl_scalar","text":"x argument stabilize. ... dots future extensions empty. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? allow_na Logical. NA values ok? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure a logical argument meets expectations and is length-1 — stabilize_lgl_scalar","text":"x, unless one checks fails.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/stabilize_lgl_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ensure a logical argument meets expectations and is length-1 — stabilize_lgl_scalar","text":"","code":"stabilize_lgl_scalar(TRUE) #> [1] TRUE stabilize_lgl_scalar(\"TRUE\") #> [1] TRUE try(stabilize_lgl_scalar(c(TRUE, FALSE, TRUE))) #> Error in eval(expr, envir, enclos) :  #>   `c(TRUE, FALSE, TRUE)` must be a single <logical>. #> ✖ `c(TRUE, FALSE, TRUE)` has 3 values. stabilize_lgl_scalar(NULL) #> NULL try(stabilize_lgl_scalar(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>."},{"path":"https://jonthegeek.github.io/stbl/reference/stbl-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stbl: Stabilize Function Arguments — stbl-package","title":"stbl: Stabilize Function Arguments — stbl-package","text":"set consistent functions quickly check function arguments, coerce desired configuration, deliver informative error messages possible.","code":""},{"path":[]},{"path":"https://jonthegeek.github.io/stbl/reference/stbl-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stbl: Stabilize Function Arguments — stbl-package","text":"Maintainer: Jon Harmon jonthegeek@gmail.com (ORCID)","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to character — to_chr","title":"Coerce an argument to character — to_chr","text":"value can coerced character without losing information, silently. Otherwise throw informative error.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to character — to_chr","text":"","code":"to_chr(   x,   allow_null = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to character — to_chr","text":"x argument stabilize. allow_null Logical. NULL acceptable value? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to character — to_chr","text":"character equivalent x.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coerce an argument to character — to_chr","text":"function two important differences base::.character(): lists data.frames coerced character. base R, objects coerced character representations elements. example, .character(list(letters)) returns \"1:10\". unlikely event expected behavior, use .character() instead. NULL values can rejected part call function (allow_null = FALSE).","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to character — to_chr","text":"","code":"to_chr(\"a\") #> [1] \"a\" to_chr(letters) #>  [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" #> [20] \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" to_chr(1:10) #>  [1] \"1\"  \"2\"  \"3\"  \"4\"  \"5\"  \"6\"  \"7\"  \"8\"  \"9\"  \"10\" to_chr(1 + 0i) #> [1] \"1+0i\" to_chr(NULL) #> NULL try(to_chr(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>."},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to a length-1 character vector — to_chr_scalar","title":"Coerce an argument to a length-1 character vector — to_chr_scalar","text":"function wraps to_chr(), adding quick check confirm input contains single value.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to a length-1 character vector — to_chr_scalar","text":"","code":"to_chr_scalar(   x,   allow_null = TRUE,   allow_zero_length = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to a length-1 character vector — to_chr_scalar","text":"x argument stabilize. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to a length-1 character vector — to_chr_scalar","text":"character vector equivalent x.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_chr_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to a length-1 character vector — to_chr_scalar","text":"","code":"to_chr_scalar(\"a\") #> [1] \"a\" try(to_chr_scalar(letters)) #> Error in eval(expr, envir, enclos) :  #>   `letters` must be a single <character>. #> ✖ `letters` has 26 values."},{"path":"https://jonthegeek.github.io/stbl/reference/to_int.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to integer — to_int","title":"Coerce an argument to integer — to_int","text":"value can coerced integer without losing information, silently. Otherwise throw informative error. function equivalent stabilize_int() additional arguments set default values, faster.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to integer — to_int","text":"","code":"to_int(   x,   allow_null = TRUE,   coerce_character = TRUE,   coerce_factor = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/to_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to integer — to_int","text":"x argument stabilize. allow_null Logical. NULL acceptable value? coerce_character Logical. character vectors \"1\" \"2.0\" coerced integer? coerce_factor Logical. factors values \"1\" \"2.0\" coerced integer? Note function uses character value factor, .integer() uses integer index factor. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_int.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to integer — to_int","text":"integer equivalent x.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_int.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to integer — to_int","text":"","code":"to_int(1:10) #>  [1]  1  2  3  4  5  6  7  8  9 10 to_int(\"1\") #> [1] 1 to_int(1 + 0i) #> [1] 1 to_int(NULL) #> NULL try(to_int(c(1, 2, 3.1, 4, 5.2))) #> Error in eval(expr, envir, enclos) :  #>   Can't convert from `c(1, 2, 3.1, 4, 5.2)` <double> to <integer> due to loss of precision. #> • Locations: 3, 5 try(to_int(\"1\", coerce_character = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   Can't coerce `\"1\"` <character> to <integer>. try(to_int(c(\"1\", \"2\", \"3.1\", \"4\", \"5.2\"))) #> Error in eval(expr, envir, enclos) :  #>   `c(\"1\", \"2\", \"3.1\", \"4\", \"5.2\")` <character> must be coercible to #> <integer> #> ✖ Can't convert some values due to loss of precision. #> • Locations: 3 and 5"},{"path":"https://jonthegeek.github.io/stbl/reference/to_int_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to a length-1 integer — to_int_scalar","title":"Coerce an argument to a length-1 integer — to_int_scalar","text":"function wraps to_int(), adding quick check confirm input contains single value.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_int_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to a length-1 integer — to_int_scalar","text":"","code":"to_int_scalar(   x,   allow_null = TRUE,   allow_zero_length = TRUE,   coerce_character = TRUE,   coerce_factor = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/to_int_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to a length-1 integer — to_int_scalar","text":"x argument stabilize. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? coerce_character Logical. character vectors \"1\" \"2.0\" coerced integer? coerce_factor Logical. factors values \"1\" \"2.0\" coerced integer? Note function uses character value factor, .integer() uses integer index factor. x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_int_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to a length-1 integer — to_int_scalar","text":"integer equivalent x.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_int_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to a length-1 integer — to_int_scalar","text":"","code":"to_int_scalar(\"1\") #> [1] 1 try(to_int_scalar(1:10)) #> Error in eval(expr, envir, enclos) :  #>   `1:10` must be a single <integer>. #> ✖ `1:10` has 10 values."},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to logical — to_lgl","title":"Coerce an argument to logical — to_lgl","text":"value can coerced logical without losing information, silently. Otherwise throw informative error. function equivalent stabilize_lgl() additional arguments set default values, faster.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to logical — to_lgl","text":"","code":"to_lgl(   x,   allow_null = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to logical — to_lgl","text":"x argument stabilize. allow_null Logical. NULL acceptable value? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to logical — to_lgl","text":"logical vector equivalent x.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to logical — to_lgl","text":"","code":"to_lgl(TRUE) #> [1] TRUE to_lgl(\"TRUE\") #> [1] TRUE to_lgl(1:10) #>  [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE to_lgl(NULL) #> NULL try(to_lgl(NULL, allow_null = FALSE)) #> Error in eval(expr, envir, enclos) :  #>   `NULL` must not be <NULL>. try(to_lgl(letters)) #> Error in eval(expr, envir, enclos) :  #>   `letters` <character> must be coercible to <logical> #> ✖ Can't convert some values due to incompatible values. #> • Locations: 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, …, #>   25, and 26 try(to_lgl(list(TRUE))) #> Error in eval(expr, envir, enclos) :  #>   Can't coerce `list(TRUE)` <list> to <logical>."},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl_scalar.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce an argument to a length-1 logical vector — to_lgl_scalar","title":"Coerce an argument to a length-1 logical vector — to_lgl_scalar","text":"function wraps to_lgl(), adding quick check confirm input contains single value.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl_scalar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce an argument to a length-1 logical vector — to_lgl_scalar","text":"","code":"to_lgl_scalar(   x,   allow_null = TRUE,   allow_zero_length = TRUE,   x_arg = caller_arg(x),   call = caller_env(),   x_class = object_type(x) )"},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl_scalar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce an argument to a length-1 logical vector — to_lgl_scalar","text":"x argument stabilize. allow_null Logical. NULL acceptable value? allow_zero_length Logical. zero-length vectors acceptable? x_arg Character. argument name x. automatic value work cases, pass higher-level functions make error messages clearer unexported functions. call execution environment call. See call argument rlang::abort() information. x_class Character. class name x use error messages. Use remove special class x checking coercion, want error message match original class.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl_scalar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce an argument to a length-1 logical vector — to_lgl_scalar","text":"logical vector equivalent x.","code":""},{"path":"https://jonthegeek.github.io/stbl/reference/to_lgl_scalar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce an argument to a length-1 logical vector — to_lgl_scalar","text":"","code":"to_lgl_scalar(\"TRUE\") #> [1] TRUE try(to_lgl_scalar(c(TRUE, FALSE))) #> Error in eval(expr, envir, enclos) :  #>   `c(TRUE, FALSE)` must be a single <logical>. #> ✖ `c(TRUE, FALSE)` has 2 values."}]
