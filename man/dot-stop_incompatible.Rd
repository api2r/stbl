% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aaa-conditions.R
\name{.stop_incompatible}
\alias{.stop_incompatible}
\title{Abort with an "incompatible type" message}
\usage{
.stop_incompatible(
  x_class,
  to,
  failures,
  due_to,
  x_arg,
  call,
  parent = NULL,
  ...
)
}
\arguments{
\item{x_class}{\verb{(length-1 character)} The class name of \code{x} to use in error
messages. Use this if you remove a special class from \code{x} before checking
its coercion, but want the error message to match the original class.}

\item{to}{The target object for the coercion.}

\item{failures}{\code{(logical)} A logical vector indicating which elements
failed.}

\item{due_to}{\verb{(length-1 character)} A string describing the reason for the
failure.}

\item{x_arg}{\verb{(length-1 character)} An argument name for x. The automatic
value will work in most cases, or pass it through from higher-level
functions to make error messages clearer in unexported functions.}

\item{call}{\code{(environment)} The execution environment to mention as the
source of error messages.}

\item{parent}{A parent condition, as you might create during a
\code{\link[rlang:try_fetch]{rlang::try_fetch()}}. See \code{\link[rlang:abort]{rlang::abort()}} for additional information.}

\item{...}{Additional parameters passed to \code{\link[cli:cli_abort]{cli::cli_abort()}} and on to
\code{\link[rlang:abort]{rlang::abort()}}.}
}
\value{
This function is called for its side effect of throwing an error and
does not return a value.
}
\description{
Abort with an "incompatible type" message
}
\keyword{internal}
