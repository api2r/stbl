% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stabilize_lgl_scalar.R
\name{stabilize_lgl_scalar}
\alias{stabilize_lgl_scalar}
\title{Ensure a logical argument meets expectations and is length-1}
\usage{
stabilize_lgl_scalar(
  x,
  ...,
  allow_null = TRUE,
  allow_na = TRUE,
  x_arg = rlang::caller_arg(x),
  call = rlang::caller_env(),
  x_class = object_type(x)
)
}
\arguments{
\item{x}{The argument to stabilize.}

\item{...}{These dots are for future extensions and should be empty.}

\item{allow_null}{Logical. Is NULL an acceptable value?}

\item{allow_na}{Logical. Are NA values ok?}

\item{x_arg}{Character. An argument name for x. The automatic value will work
in most cases, or pass it through from higher-level functions to make error
messages clearer in unexported functions.}

\item{call}{The execution environment of the call. See the \code{call} argument of
\code{rlang::abort()} for more information.}

\item{x_class}{Character. The class name of \code{x} to use in error messages. Use
this if you remove a special class from \code{x} before checking its coercion,
but want the error message to match the original class.}
}
\value{
\code{x}, unless one of the checks fails.
}
\description{
This function is equivalent to \code{\link[=stabilize_lgl]{stabilize_lgl()}}, but it is optimized to
check for length-1 logical vectors.
}
\examples{
stabilize_lgl_scalar(TRUE)
stabilize_lgl_scalar("TRUE")
try(stabilize_lgl_scalar(c(TRUE, FALSE, TRUE)))
stabilize_lgl_scalar(NULL)
try(stabilize_lgl_scalar(NULL, allow_null = FALSE))
}
