% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stabilize_fct_scalar.R
\name{stabilize_fct_scalar}
\alias{stabilize_fct_scalar}
\title{Ensure a factor argument meets expectations and is length-1}
\usage{
stabilize_fct_scalar(
  x,
  ...,
  allow_null = TRUE,
  allow_zero_length = TRUE,
  allow_na = TRUE,
  levels = NULL,
  to_na = character(),
  x_arg = caller_arg(x),
  call = caller_env(),
  x_class = object_type(x)
)
}
\arguments{
\item{x}{The argument to stabilize.}

\item{...}{These dots are for future extensions and should be empty.}

\item{allow_null}{Logical. Is NULL an acceptable value?}

\item{allow_zero_length}{Logical. Are zero-length vectors acceptable?}

\item{allow_na}{Logical. Are NA values ok?}

\item{levels}{Character. Expected levels. If \code{NULL} (default), the levels
will be computed by \code{\link[base:factor]{base::factor()}}.}

\item{to_na}{Character. Values to coerce to \code{NA}.}

\item{x_arg}{Character. An argument name for x. The automatic value will work
in most cases, or pass it through from higher-level functions to make error
messages clearer in unexported functions.}

\item{call}{The execution environment of the call. See the \code{call} argument of
\code{rlang::abort()} for more information.}

\item{x_class}{Character. The class name of \code{x} to use in error messages. Use
this if you remove a special class from \code{x} before checking its coercion,
but want the error message to match the original class.}
}
\value{
\code{x}, unless one of the checks fails.
}
\description{
This function is equivalent to \code{\link[=stabilize_fct]{stabilize_fct()}}, but it is optimized to
check for length-1 factors.
}
\examples{
stabilize_fct_scalar("a")
try(stabilize_fct_scalar(letters))
try(stabilize_fct_scalar("c", levels = c("a", "b")))
}
