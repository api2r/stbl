% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/to_int_scalar.R
\name{to_int_scalar}
\alias{to_int_scalar}
\title{Coerce an argument to a length-1 integer}
\usage{
to_int_scalar(
  x,
  coerce_character = TRUE,
  coerce_factor = TRUE,
  x_arg = rlang::caller_arg(x),
  call = rlang::caller_env(),
  x_class = object_type(x)
)
}
\arguments{
\item{x}{The argument to stabilize.}

\item{coerce_character}{Logical. Should character vectors such as "1" and
"2.0" be coerced to integer?}

\item{coerce_factor}{Logical. Should factors with values such as "1" and
"2.0" be coerced to integer? Note that this function uses the character
value from the factor, while \code{\link[=as.integer]{as.integer()}} uses the integer index of the
factor.}

\item{x_arg}{Character. An argument name for x. The automatic value will work
in most cases, or pass it through from higher-level functions to make error
messages clearer in unexported functions.}

\item{call}{The execution environment of the call. See the \code{call} argument of
\code{rlang::abort()} for more information.}

\item{x_class}{Character. The class name of \code{x} to use in error messages. Use
this if you remove a special class from \code{x} before checking its coercion,
but want the error message to match the original class.}
}
\value{
An integer equivalent to \code{x}.
}
\description{
This value wraps \code{\link[=to_int]{to_int()}}, adding a quick check to confirm that the input
contains a single value.
}
\examples{
to_int_scalar("1")
try(to_int_scalar(1:10))
}
